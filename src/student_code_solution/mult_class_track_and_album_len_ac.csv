,acid,anon_code
2561,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album_name, song_objects):
        self.album_name = album_name
        self.song_objects = song_objects
    
    def length():
        album_length = 0
        for object in self.song_objects:
            album_length += object.length
        return album_length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
2562,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album_name, song_objects):
        self.album_name = album_name
        self.song_objects = song_objects
    
    def length():
        album_length = 0
        for object in self.song_objects:
            album_length += object.length
        return album_length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])

print(a1.length())

"
2563,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    pass

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
2564,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album_name, song_objects):
        self.album_name = album_name
        self.song_objects = song_objects
    
    def length():
        album_length = 0
        for object in self.song_objects:
            album length += object.length
        return album_length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
2565,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album_name, song_objects):
        self.album_name = album_name
        self.song_objects = song_objects
    
    def length():
        album_length = 0
        for object in self.song_objects:
            album_length += object.length
        return album_length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])

#print(a1.length())

"
2566,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album_name, song_objects):
        self.album_name = album_name
        self.song_objects = song_objects
    
    def length():
        album_length = 0
        for object in self.song_objects:
            album_length += object.length
        return album_length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])

a1.length()

"
2567,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album_name, song_objects):
        self.album_name = album_name
        self.song_objects = song_objects
    
    def length(self):
        album_length = 0
        for object in self.song_objects:
            album_length += object.length
        return album_length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])

a1.length()

"
4024,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def lehgth(self):
        album_len = 0
        for song in self.name:
            album_len += song.length
        return album_len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
4026,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def lehgth(self):
        album_len = 0
        for song in self.songs:
            album_len += song.length
        return album_len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
4027,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        album_len = 0
        for song in self.songs:
            album_len += song.length
        return album_len
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
4028,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        album_len = 0
        for song in self.songs:
            album_len += song.length
        return album_len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17120,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name=name
        self.song=song
    def __length__(self):
        num=len(self.song)
        return num
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17122,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name=name
        self.song=song
    def length(self):
        num=len(self.song)
        return num
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17124,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name=name
        self.song=song
    def length(self):
        num=0
        for i in song:
            num+=i.length
        return num
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17125,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name=name
        self.song=song
    def length(self):
        num=0
        for i in self.song:
            num+=i.length
        return num
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17146,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self,name,lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        return count(self.lst)
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17147,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self,name,lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        length = 0
        for song in self.lst:
            length += song.length
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17149,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self,name,lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        return len(self.lst)
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17152,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self,name,lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        return sum(self.lst)
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17153,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self,name,lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        length = 0
        for song in self.lst:
            length += song.length
        return length
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
17154,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self,name,lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        length = 0
        for song in self.lst:
            length += song
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
18516,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        total = 0
        for i in self.song_list:
            total += self.song_list.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
18517,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self,):
        return len(self.song_list)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
18518,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        total = 0
        for i in self.song_list:
            total += self.song_list.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
18519,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        total = 0
        for i in self.song_list:
            total += i.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
18541,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
18554,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
19238,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
19797,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
20475,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for s in range(len(self.songs)):
            total += self.songs[s].length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21187,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    s1 = Song(""Something"", 120)
    s2 = Song(""Here Comes the Sun"", 122)
    a1 = Album(""Abbey Road"", [s1, s2])
    print(a1.length())

    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total"
21188,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total"
21217,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21218,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21234,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21850,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in lst:
            total += song.__str__().split("":"")[1]
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21852,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += song.__str__().split("":"")[1]
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21853,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += int(song.__str__().split("":"")[1])
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21854,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += song.total()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
21855,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += int(song.__str__().split("":"")[1])
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23759,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for s in self.songs:
            total = total + s.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23761,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for s in self.songs:
            total = total + s.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23762,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for s in self.songs:
        total = total + s.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23763,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for s in self.songs:
        total = total + s.length()

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23764,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for s in self.songs:
            total = total + s.length()

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23765,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for s in self.songs:
            total = total + s.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())"
23796,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album):
        self.album = album
    def length(self):
        length = 0
        for song in self.album:
            length += self.length
    return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23803,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album, lst_of_songs):
        self.album = album
        self.lst_of_songs = lst_of_songs
        
    def length(self):
        length = 0
        for song in self.lst_of_songs:
            length += int(self.length)
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23804,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, album):
        self.album = album
    def length(self):
        length = 0
        for song in self.album:
            length += self.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23805,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album):
        self.album = album
    def length(self):
        length = 0
        for song in self.album:
            length += self.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23806,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album, lst_of_songs):
        self.album = album
        self.lst_of_songs = lst_of_songs
        
    def length(self):
        length = 0
        for song in self.lst_of_songs:
            length += self.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23807,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album, lst_of_songs):
        self.album = album
        self.lst_of_songs = lst_of_songs
        
    def length(self):
        length = 0
        for song in self.lst_of_songs:
            length += int(song.length)
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23808,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album, lst_of_songs):
        self.album = album
        self.lst_of_songs = lst_of_songs
        
    def length(self):
        length = 0
        for song in self.lst_of_songs:
            length += self.song.length()
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
23810,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album, lst_of_songs):
        self.album = album
        self.lst_of_songs = lst_of_songs
        
    def length(self):
        length = 0
        for song in self.lst_of_songs:
            length += int(Song.length)
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25117,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst_songs):
        self.name = name
        self.lst_songs = lst_songs
    def length(self):
        total = 0
        for song in self.lst_songs:   
            total += self.length
        return total
  
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())



"
25120,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst_songs):
        self.name = name
        self.lst_songs = lst_songs
    def length(self):
        total = 0
        for song in self.lst_songs:   
            total += self.length
        return total
  
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())



"
25123,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst_songs):
        self.name = name
        self.lst_songs = lst_songs
    def length(self):
        total = 0
        for song in self.lst_songs:   
            total += int(self.length)
        return total
  
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())



"
25755,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for song in self.lst:
            total += song.length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25756,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for song in self.lst:
            total += song.self.length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25757,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for song in self.lst:
            total += Song.self.length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25758,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for song in self.lst:
            total += song.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25769,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for self.name in self.songlist:
            total += 1

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25771,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for song in songlist:
            total += 1

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25772,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for song in self.songList:
            total += self.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25773,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for self.name in self.songList:
            total += 1

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25774,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for song in self.songlist:
            total += 1

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25775,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for song in self.songList:
            total += length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25776,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for song in self.songList:
            total += 1

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25777,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        for song in self.songList:
            total += self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
25778,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songList):
        self.name = name
        self.songList = songList
    def length(self):
        total = 0
        
        for song in self.songList:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26293,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = length.lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += len(i)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26294,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = song.lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += len(i)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26295,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = Song.lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += len(i)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26296,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += len(i)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26297,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in Song.lst: 
            total += len(i)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26298,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += i
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26299,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += len(i)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26300,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for name in self.lst: 
            total += song.lst
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26301,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += song.lst
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26302,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26303,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += i.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
26304,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += i.length 
            #calling Song instance variable length (line 5)
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
27271,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        pass

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
27275,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album: 
    def __init__(self, name, lst): 
        self.name = name 
        self.lst = lst 
    def length(self): 
        total = 0 
        for i in self.lst: 
            total += self.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28441,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for self.song in self.songs:
            total += self.song.length
        return total
       
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28444,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
       
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28445,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, songs):
        self.songs = songs
    def length(self):
        total = 0
        for self.song in self.songs:
            total += self.song.length
        return total
       
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28480,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    #dont inherit from song
    def __init__(self, name, songs):
        self.name
        self.songs
        
    def length(self)
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28484,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    #dont inherit from song
    def __init__(self, name, songs):
        self.name
        self.songs
        
    def length(self):
        total_length = 0
        total length += song.length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28485,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    #dont inherit from song
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total_length = 0
        for song in self.songs:
            total_length += song.length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28487,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    #dont inherit from song
    def __init__(self, name, songs):
        self.name
        self.songs
        
    def length(self):
        total_length = 0
        for song in self.songs:
            total_length += song.length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28488,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    #dont inherit from song
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total_length = 0
        for song in self.songs:
            total_length += song.length
        return total_length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28755,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, item.name, lst):
        self.lst = lst
        
    def length(self, item.length):
        
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28756,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for i in self.lst:
            total += i[1]
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28757,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for i in self.lst:
            total += Song(i)
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28758,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for i in self.lst:
            total += Song(i)
            print(total)
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28759,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for i in self.lst:
            print('x')
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
28760,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
        
    def length(self):
        total = 0
        for i in self.lst:
            total += i.length
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
29518,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += song.length
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
30280,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for s in self.songs:
            total += s.super().length
        return total
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
30281,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for s in songs:
            total += s.super().length
        return total
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
30282,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for s in self.songs:
            total += s.length
        return total
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
30284,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for s in songs:
            total += s.super().length
        return total
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
30309,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
30310,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total+= song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
31153,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total+= song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
31173,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
32607,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lst):
        self.name = name
        self.lst = lst;
        
    def length(self):
        length = 0
        for song in self.lst:
            length = length + song.length
        return length
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
32618,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list 
        
    def length(self):
        total = 0 
        for song in self.song_list:
            total += song.length
        return total
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33159,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        summ = 0 
        for songlist in self.songlist:
            summ += songlist
        return summ


s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33161,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, length):
        self.name = name
        self.length = length 
        
    def length(self):
        summ = 0 
        for songs in self.name:
            summ += self.length
        return summ


s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33162,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        summ = 0 
        for songlist in self.songlist:
            sum += songlist
        return sum


s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33165,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, L):
        self.L = L
    def length(self):
        s = 0
        for songs in self.L:
            s+=songs.length
        return s

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33166,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, L):
        self.L = L
    def length(self):
        s = 0
        for songs in self.L:
            s+=self.length
        return s

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33167,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, L):
        self.name = name
        self.L = L
    def length(self):
        s = 0
        for songs in self.L:
            s+=songs.length
        return s

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33712,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        out = 0
        for i in len(songs):
            out += i
        return out

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33713,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        out = 0
        for i in len(self.songs):
            out += i
        return out

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
33714,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        out = 0
        for i in self.songs:
            out += i.length
        return out

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
34491,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name 
        self.songs = songs
        
    def length(self):
        total = 0 
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35808,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name 
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.lenght()

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35809,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name 
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35812,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name 
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35813,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name 
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35814,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name 
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35831,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

        def __init__(self, name, lst):
            self.name = name
            self.lst = lst
            
        def length(self):
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
35839,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

        def __init__(self, name, songs):
            self.name = name
            self.songs = songs
            
        def length(self):
            total = 0
            for song in self.songs:
                total += song.length
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
37592,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
37593,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38061,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38269,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        count = 0
        for song in self.song_list:
            count += 1
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38270,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        count = 0
        for song in self.song_list:
            count += song.length
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38290,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38826,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.songs = songs
        self.name = name
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", (s1, s2))
print(a1.length())

"
38829,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, songs):
        self.songs = songs
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", (s1, s2))
print(a1.length())

"
38830,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, songs):
        self.songs = songs
    def length(self):
        length = 0
        for song in songs:
            length += song.length
    
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38831,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, songs):
        self.songs = songs
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
38832,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.songs = songs
        self.name = name
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
        return length
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", (s1, s2))
print(a1.length())

"
39486,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, lst):
        self.lst = lst
    def length(self):
        lenth = 0
        for song in self.lst:
            length += song.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39506,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39929,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    
    def __init__(self, album):
        self.album = album
        
    def length():
        tot_len = 0
        for song in self.album:
            tot_len += super().self.length
        return length
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39930,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
    def length(self):
        tot_len = 0
        for song in self.song_list:
            tot_len += int(self.length())
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39931,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    
    def __init__(self, album):
        self.album = album
        
    def length():
        for song in self.album:
            tot_len += self.length
        return length
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39932,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
    def length():
        tot_len = 0
        for song in self.song_list:
            tot_len += self.length
        return length
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39933,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
    def length(self):
        tot_len = 0
        for song in self.song_list:
            tot_len += int(self.length)
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39934,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    
    def __init__(self, album):
        self.album = album
        
    def length():
        tot_len = 0
        for song in self.album:
            tot_len += self.length
        return length
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39935,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
    def length(self):
        tot_len = 0
        for song in self.song_list:
            tot_len += self.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39936,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
        
    def length(self):
        tot_len = 0
        for song in self.song_list:
            tot_len += self.length
        return length
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39937,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
    def length(self):
        tot_len = 0
        for song in self.song_list:
            tot_len += int(song.length)
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
39938,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, song_list):
        self.album = album
        self.song_list = song_list
        
    def length(self):
        tot_len = 0
        for song in self.song_list:
            tot_len += int(song.length)
        return tot_len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
40471,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list=[]): 
        self.name = name 
        self.song_list = song_list 
    def length(self): 
        total = 0 
        for song in range(len(song_list)): 
            total += song_list[song].length
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
40472,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list=[]): 
        self.name = name 
        self.song_list = song_list 
    def length(self): 
        total = 0 
        for song in range(len(self.song_list)): 
            total += song_list[song].length
            return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
40473,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list=[]): 
        self.name = name 
        self.song_list = song_list 
    def length(self): 
        total = 0 
        for song in range(len(self.song_list)): 
            total += self.song_list[song].length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
40474,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list=[]): 
        self.name = name 
        self.song_list = song_list 
    def length(self): 
        total = 0 
        for song in range(len(song_list)): 
            total += song_list[song].length
            return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
40475,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list=[]): 
        self.name = name 
        self.song_list = song_list 
    def length(self): 
        total = 0 
        for song in range(len(self.song_list)): 
            total += self.song_list[song].length
            return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42182,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        count = 0
        for it in self.songs:
            count += song.length
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42183,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self, songs):
        total = 0
        for it in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42184,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for it in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42185,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(name, self, songs):
        self.name = name
        self.songs = song
        
    def length(self):
        count = 0
        for it in self.songs:
            total += song.length
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42186,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = song
        
    def length(self):
        count = 0
        for it in self.songs:
            total += song.length
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42187,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        count = 0
        for it in self.songs:
            total += song.length
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42188,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(name, list):
        self.name = name
        self.list = Song.list
        
    def length(list):
        count = 0
        for it in list:
            count += 1
        return count

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42189,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42190,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for it in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42191,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for sohg in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42383,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        self.lis=[]
    def length(self): 
        return len(self.lis)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42386,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        self.lis=[]
    def length(self): 
        for song in self.name: 
            self.lis.append(song)
        return len(self.lis)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42387,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        self.lis=[]
    def length(self): 
        for song in self.name:
            print(song)
            self.lis.append(song)
        return len(self.lis)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42390,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        self.lis=[]
    def length(self): 
        for song in Song(name):
            print(song)
            self.lis.append(song)
        return len(self.lis)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42392,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        self.lis=[]
    def length(self): 
        for song in self.name:
            print(song)
            self.lis.append(song)
        return len(self.lis)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42436,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        return self.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42437,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        Song.__init__
        print(self.length)
   

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42438,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        return self.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42439,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        Song.__init__
        for s in self.length:
            print(s)
   

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42441,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        return self.Song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42442,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        return Song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42444,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,lis):
        self.name=name
        
    def length(self): 
        print(Song.__init__)
   

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
42448,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
        
    def length(self): 
        total=0
        for song in self.song: 
            total+=song.length
        return total
   

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
43579,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44191,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def length(self):
        total=0
        for i in self.songs:
            total+=i
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44195,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def length(self):
        sum=0
        for song in self.length:
            sum+= songs.length()
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44196,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def length(self):
        total=0
        for i in self.songs:
            total+=songs.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44197,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
    def length(self):
        total=0
        for i in self.songs:
            total+=songs.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44198,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def total(self):
        sum=0
        for song in self.songs:
            sum+= songs.total()
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44199,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def total(self):
        sum=0
        for song in self.songs:
            sum+= songs.total()
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.total())

"
44200,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def length(self):
        sum=0
        for song in self.length:
            sum+= songs.length()
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.total())

"
44201,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def length(self):
        sum=0
        for song in self.songs:
            sum+= self.songs[1]
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44202,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
        
    def length(self):
        sum=0
        for song in self.songs:
            sum+= songs[1]
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)

a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44303,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __int__(self, name, song):
        self.name=name
        self.song=song
        
    def length(self):
        total=0
        for i in self.song:
            total+=i.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44304,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __int__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        total=0
        for i in self.song:
            total+=i.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44305,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __int__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        total=0
        for song in self.song:
            total+=song.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44307,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name=name
        self.song=song
        
    def length(self):
        total=0
        for i in self.song:
            total+=i.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44932,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
   
    def length(self):
        total = 0
        for x in self.songs:
            total += x.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
44936,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
   
    def length(self):
        total = 0
        for x in self.songs:
            total += x.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45387,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length()
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45388,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            total += song[1]
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45389,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            print (song)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45390,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            print (song.length())

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45391,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            print (song.length())

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45392,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            print (self.song.length())

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45393,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45394,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            print (song.name.length())

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
45396,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
46426,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    
    def length(self):
        sum = 0
        for song in self.songs:
            sum += song.length
        return sum
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
46428,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
46449,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name;
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
            
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47242,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, song_list):
        self.name = name;
        for i in range (len(song_list)):
            self.song_list[i] = song_list[i]
            
    def length(self):
        length_total = 0
        for m in range(len(self.song_list)):
            length_total = length_total + self.song_list[m].length
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47243,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init(self, name, song_list):
        self.name = name;
        for i in range (len(song_list)):
            self.song_list[i] = song_list[i]
            
    def length(self):
        length_total = 0
        for m in range(len(self.song_list)):
            length_total = length_total + self.song_list[m].length
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47244,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, song_list):
        self.name = name;
        for i in range (len(song_list)):
            self.list[i] = song_list[i]
            
    def length(self):
        length_total = 0
        for m in range(len(self.list)):
            length_total = length_total + self.list[m].length
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47245,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, song_list):
        self.name = name;
        for i in range (len(song_list)):
            self.song_list[i] = song_list[i]
            
    def length(self):
        length_total = 0
        for song in self.song_list:
            length_total = length_total + song.length
        return length_total
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47246,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, song_list):
        self.name = name;
        for i in range (len(song_list)):
            self.song_list[i] = song_list[i]
            
    def length(self):
        length_total = 0
        for song in self.song_list:
            length_total = length_total + song.length
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47247,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, song_list):
        self.name = name
        self.song_list = song_list
            
    def length(self):
        length_total = 0
        for song in self.song_list:
            length_total = length_total + song.length
        return length_total
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47248,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, song_list):
        self.name = name
        self.list = list
            
    def length(self):
        length_total = 0
        for song in self.song_list:
            length_total = length_total + song.length
        return length_total
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47249,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, list):
        self.name = name
        self.list = list
        
    def length(self):
        sum = 0
        for song in self.list:
            sum += song.length
        return sum

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47250,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def _init_(self, name, list):
        self.name = name
        self.list = list
        
    def length(self):
        sum = 0
        for song in self.list:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47280,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())


"
47281,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, length):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total+=song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
47282,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total+=song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
48020,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())
songs = [s1, s2]


def __init__(self, songs):
    self.songs = songs



    
    
    
    

"
48033,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())



def __init__(self, name, list):
    song_lst = []
    for song in list:
        song_lst.append(song)
    
        
    
        



    
    
    
    

"
48034,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

Song(""Something"", 120)
    
        



    
    
    
    

"
48037,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
48039,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.song_list = song_list
        self.name = name
        
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length
            
        return total
            
  
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
48515,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
48516,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            total += i.length()
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
48517,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            total = total + i.length()
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
48518,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            total = total + i.length
        return total
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49056,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, *songs):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i)
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49057,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, songs):
        self.songs = songs
        
    def length(self)
        total = 0
        for i in self.songs:
            total = total + i.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49058,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, songs)
        self.songs = songs

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49059,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, songs):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i)
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49060,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, songs):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            total = total + i.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49061,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, *songs):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i)
            total = total + i.length()

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49062,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, songs[]):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            total = total + i.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49063,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i.name())
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
print s1.length()
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49064,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, *songs):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i)
            #total = total + i.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49065,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, songs):
        self.songs = songs

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49066,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, *songs):
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            total = total + i.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49067,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i.name())
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
print (s1.length())
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49068,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i.name)
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49069,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i)
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49070,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i.name())
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49071,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            
            total = total + song.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49072,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:           
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49073,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i)
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49074,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in self.songs:
            print(i.name())
            total = total + i.length()
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49076,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, *songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            
            total = total + song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49109,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49374,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        songs = []
        for song in songs:
            songs += song 
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
49376,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0 
        for song in self.songs:
            total += song.length
            
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
50551,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        tot = 0
        for song in self.songs:
            tot += song.self.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
50552,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        tot = 0
        for song in self.songs:
            tot += song.length
        return tot

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
50553,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        tot = 0
        for song in self.songs:
            tot += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
50554,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        tot = 0
        for song in self.songs:
            tot += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
50597,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
50598,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
52527,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        length = 0
        
        for i in self.songs:
            length += i.length
            
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
52538,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        length = 0
        
        for i in songs:
            length += i.length
            
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
52560,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list = []):
        self.name = name
        self.song_list = song_list
    def length(self):
        for i in range(len(self.song_list)):
            total += self.song_list[i].length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
52567,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list = []):
        self.name = name
        self.song_list = song_list
    def length(self):
        total = 0
        for i in range(len(self.song_list)):
            total += self.song_list[i].length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
52568,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
52574,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54598,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
        
    def length(self):
        total = 0
        for song in self.song:
            str(total += song.length());
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54599,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.song = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length();
       
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54601,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
        
    def length(self):
        total = 0
        for songs in self.song:
            total += song.length();
       
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54602,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length();
       
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54603,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
        
    def length(self):
        total = 0
        for song in self.song:
            total += song.length;
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54604,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
        
    def length(self):
        total = 0
        for song in self.song:
            total += song.length();
       
        return total
            

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
54649,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55060,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55063,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55064,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55065,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
            return total

s1 = Song(""Something"", 242)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55066,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55067,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        for song in self.songs:
            total = 0
            total += song.length
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55068,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        for song in self.songs:
            total += song.length
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55069,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
            return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55444,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs

    def __str__(self):
        length = 0
        for song in self.songs:
            length += song.length
        return f'{self.name}: {length}'
    
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55450,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs

    def __str__(self):
        length = 0
        for song in self.songs:
            length += song.length
        return f'{self.name}: {length}'
    
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

print(a1)"
55453,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs

    def __str__(self):
        length = 0
        for song in self.songs:
            length += song.length
        return f'{self.name}: {length}'
    
    def length(self):
        length = 0
        for song in self.songs:
            length += song.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())"
55489,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
     def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
55490,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56010,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_lst):
        self.name = name
        self.song_lst = song_lst
    def length(self):
        total = 0
        for song in self.song_lst:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56011,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_lst):
        self.name = name
        self.song_lst = song_lst
    def length(self):
        total = 0
        for song in self.song_lst:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56745,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song):
        self.name = name
        self.song = Song
    
    def length(self):
        total = 0
        for i in self.song:
            total += i
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56763,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song):
        self.name = name
        self.song = Song
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56766,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song):
        self.name = name
        self.song = Song
    
    def length(self, s1, s2):
        total = s1 + s2
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56767,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song):
        self.name = name
        self.song = Song
    
    def length(self):
        total = s1 + s2
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56768,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song):
        self.name = name
        self.song = Song
    
    def length(self):
        total = s1[1] + s2[1]
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
56770,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song):
        self.name = name
        self.song = Song
    
    def length(self):
        total = 0
        for song in self.song:
            total += song.length
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
58235,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
58706,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
59679,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, list1):
        self.name = name
        self.list1 = list1
        
    def length(self):
        self.total = 0
        for item in list1:
            self.total += item.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
59683,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, list1):
        self.name = name
        self.list1 = list1
        
    def length(self):
        self.total = 0
        for item in self.list1:
            self.total += item.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
59711,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, list1):
        self.name = name
        self.list1 = list1
        
    def length(self):
        self.total = 0
        for item in self.list1:
            self.total += item.length
        return self.total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60195,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for x in self.songlist:
            total += x.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60196,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        return len(self.songlist)
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60794,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in self.song:
            len+=self.song.length
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60803,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in self.song:
            len+=Song.song.length
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60804,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in song:
            len+=self.song.length
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60807,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in song:
            len+=song.length
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60808,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in self.song:
            len+=song
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60809,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        total=0
        for i in self.song:
            total+=song.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60810,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in self.song:
            len+=song.length
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60811,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        total=0
        for i in self.song:
            total+=i.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60812,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name=name
        self.song=song
    def length(self):
        len=0
        for i in self.song:
            len+=song.length
        return len
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60824,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self._name = name
        self._songs = songs
        
    def length(self):
        length = 0
        for items in self._songs:
            length += items.length
            
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
60830,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self._name = name
        self._songs = songs
        
    def length(self):
        length = 0
        for items in self._songs:
            length += items.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
61070,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in songs:
            total += song.length
        return total
  
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
61071,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
  
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
62611,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, list_songs):
        self.name=name
        self.list_songs=list_songs
    def length(self):
        total=0
        for i in self.list_songs:
            total+= i.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
62630,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
62631,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, songs):
        self.songs = songs
    def length(self):
        ans = 0
        for s in self.songs:
            ans += s.length
        return ans
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
62637,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        ans = 0
        for s in self.songs:
            ans += s.length
        return ans
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
63107,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, lst):
        self.name = name
        self.s = lst
    
    def length(self):
        l = 0
        for s in self.s:
            l += s.length
        return l

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64087,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64602,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        songLength = 0
        for song in songs:
            songLength = songLength + song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64603,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        return len(songs)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64604,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        songLength = 0
        for song in self.songs:
            songLength += song.length
        return songLength

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64605,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        songLength = 0
        for song in self.songs:
            songLength += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64606,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        return len(self.songs)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64607,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        songLength = 0
        for song in self.songs:
            songLength = songLength + song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64608,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        songLength = 0
        for song in self.songs:
            songLength += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64616,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name = name
        self.song = song
    def length(self):
        count = 0
        for i in self.song:
            count += song.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64617,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name = name
        self.song = song
    def length(self):
        count = 0
        for i in self.song:
            count += i.length
        return count
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
64618,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name = name
        self.song = song
    def length(self):
        count = 0
        for i in self.song:
            count += i.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
65427,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        tot = 0
        for song in self.songs:
            tot += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
65428,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        tot = 0
        for song in self.songs:
            tot += song.length
        return tot

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66101,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in range(len(self.songs)):
            total =+ self.songs[i].length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66104,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for i in range(len(self.songs)):
            total = total + self.songs[i].length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66105,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = []
        
    def length(self):
        total = 0
        for i in range(len(self.songs)):
            total =+ self.songs[i].length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66140,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, songlst):
        self.album = album
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += self.length
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66141,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, songlst):
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += self.length
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66142,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlst):
        self.name = name
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += songlst.length
        return total_length
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66143,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlst):
        self.name = name
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += song.length
        return total_length
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66144,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, album, songlst):
        self.album = album
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += int(self.length)
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66145,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlst):
        self.name = name
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += self.songlst
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66146,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlst):
        self.name = name
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += self.length
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66147,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlst):
        self.name = name
        self.songlst = songlst
        
    def length(self):
        total_length = 0
        for song in self.songlst:
            total_length += songlst.length
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66709,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        return self.name

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(s1)
print(a1.length())

"
66712,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        pass

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66714,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        return self.name, self.lst[0]

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(s1)
print(a1.length())

"
66715,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        pass

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(s1)
print(a1.length())

"
66716,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        return self.name, self.lst

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(s1)
print(a1.length())

"
66717,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        return list(self.lst)

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(s1)
print(a1.length())

"
66718,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66719,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs): 
        self.name = name
        self.songs = songs
    def length(self):
        return f""{self.songs}""

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66720,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs): 
        self.lst = lst
        self.name = name
        self.songs = songs
    def length(self):
        return f""{self.songs}""

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66721,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs): 
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(s1)
print(a1.length())

"
66722,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs): 
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66723,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs): 
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total_length += song.length
        return total_length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
66724,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs): 
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total_length += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
67663,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
       
        
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
67664,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total += self.s1.length(s2)
        total = self.a1.length
       
        
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
67665,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = self.s1.length(s2)
       
        
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
68433,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += song
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
68435,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += song.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
68436,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for Song.length() in self.lst:
            total += Song.length()
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
68437,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for Song.length in self.lst:
            total += Song.length
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
68438,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += lst.total()
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
68439,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for song in self.lst:
            total += self.lst.total()
        return total
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
69043,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    
    def __init__(self, name, songs):
        self.name = name
        self.list_of_songs = songs
        
    def length(self):
        total_length = 0
        for song in self.list_of_songs:
            total_length += song.length
        return total_length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
69045,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    
    def __init__(self, name, songs):
        self.name = name
        self.list_of_songs = songs
        
    del length(self):
        total_length = 0
        for song in self.list_of_songs:
            total_length += song.length
        return total_length
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
69739,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
     
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
            
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70399,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        l = 0
        for Song s in self.songs:
            l += s.length
        return l

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70407,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        int l = 0
        for Song s in self.songs:
            l += s.length
        return l

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70409,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70411,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        l = int(0)
        for s in self.songs:
            l += s.length
        return l

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70413,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        l = int(0)
        for s in songs:
            l += s.length
        return l

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70515,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70869,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
70871,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
71113,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
71155,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0 
        for song in self.songs:
            total += song.length
        return total 
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72328,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72601,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += Song.song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72602,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song.songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += Song.song
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72604,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += self.song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72605,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, Song.songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += Song.self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72615,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += Song.self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72617,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += Song.song
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72618,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72619,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += Song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72620,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72621,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += song.self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72622,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songlist = []):
        self.name = name
        self.songlist = songlist
        super().__init__(name, self.length)
        
    def length(self):
        total = 0
        for song in self.songlist:
            total += self.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72664,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name 
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
            
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72669,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name 
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length()
            
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
72670,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__ (self, name, songs):
        self.name = name 
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += self.song.length()
            
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
73203,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
73612,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for name in self.lst:
            total += name.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
73613,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for name in self.lst:
            total += self.name.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
73614,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        total = 0
        for name in self.lst:
            total += name.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74165,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = []
    def length(self):
        song_list.append(self.length)
        total = 0
        for i in song_list:
            total += i
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74166,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = []
    def length(self):
        self.song_list.append(self.length)
        total = 0
        for i in self.song_list:
            total += i
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74167,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album(Song):
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = []
    def length(self):
        self.song_list.append(self.length)
        total = 0
        for i in song_list:
            total += i
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74168,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74822,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74824,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = []
    
    def length(self):
        length = 0
        for song in self.song_list:
            length += song[-1]
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74825,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        length = 0
        for song in self.song_list:
            length += song[-1]
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74826,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        total = 0
        for song in self.song_list:
            total += self.song_list.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74827,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        length = 0
        for song in self.song_list:
            length += song_list.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74828,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        length = 0
        for song in self.song_list:
            length += self.song_list.length()
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74830,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        length = 0
        for song in self.song_list:
            length += self.song_list.length
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74831,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        length = 0
        for song in self.song_list:
            length += song_list.length()
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
74832,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
    
    def length(self):
        total = 0
        for song in self.song_list:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
76490,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name = name
        self.song = song[]
     
    def length(self):
        length = 0
        for s in self.song:
            length += s.length
            
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the AnonLastName"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
76492,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name, song[]):
        self.name = name
        self.song = song[]
     
    def length(self):
        length = 0
        for s in self.song:
            length += s.length
            
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the AnonLastName"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
76493,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,song):
        self.name = name
        self.song = song
     
    def length(self):
        length = 0
        for s in self.song:
            length += s.length
            
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the AnonLastName"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
76495,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the AnonLastName"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77414,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song[]):
        self.name = name
        for i in range(len(Song[])):
            self.Song[i] = Song[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77418,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        for i in range(len(Songlist)):
            self.Songlist[i] = Songlist[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77419,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""
    
    def length(self):
        return self.length

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        for song in Songlist:
            
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77420,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        for song in Songlist:
            
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77421,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        self.Songlist = Songlist
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length()
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77423,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""
    
    def length(self):
        return self.length

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        self.Songlist = Songlist
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length()
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77424,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        for i in range(len(Song)):
            self.Song[i] = Song[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77425,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        self.Songlist = Songlist
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += (int)song.length()
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77426,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songlist):
        self.name = name
        self.Sontlist = Songlist
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length()
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77427,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        for i in range(len(Song)):
            self.Song[i] = Songlist[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77428,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        for i in range(len(Song)):
            self.Song[i] = Song[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77429,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        for i in range(len(Song)):
            self.list[i] = Song[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77430,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        for i in range(len(Song)):
            self.list_of_Songs[i] = Song[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77431,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song_list):
        self.name = name
        for i in range(len(Song_list)):
            self.list[i] = Song_list[i]
        
    def length(self):
        sum = 0
        for song in self.Songlist:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77432,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song_list):
        self.name = name
        self.list = list
        
    def length(self):
        sum = 0
        for song in self.list:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
77433,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, list):
        self.name = name
        self.list = list
        
    def length(self):
        sum = 0
        for song in self.list:
            sum += song.length
        return sum
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
78099,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        self.Song = Song
    def length(self):
        total = 0
        for Song in self.Song:
            total += Song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
78100,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        self.Song = Song
    def length(self):
        total = 0
        for Song in self.Song:
            total += 1
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
78101,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
78102,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Song):
        self.name = name
        self.Song = Song
    
    def length(self):
        total = 0
        for Song in self.Song:
            total += Song.price
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
78134,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
78982,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
        
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80009,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        len = 0
        for song in songs:
            len += songs.length
        return len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80011,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        len = 0
        for song in self.songs:
            len += song.length
        return len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80012,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        len = 0
        for song in songs:
            len += self.songs.length
        return len

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80024,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length():
        length = 0
        for song in lst:
            length++
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80028,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80029,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length():
        length = 0
        for song in lst:
            length += 1
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80030,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length():
        length = 0
        for song in self.lst:
            length += 1
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80031,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length(self):
        length = 0
        for song in self.lst:
            length += 1
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length(self))

"
80032,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst
    def length():
        length = 0
        for song in self.lst:
            length += 1
        return length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80878,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,Song):
        self.name = name
        self.Song=Song
    def length(self):

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80885,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,):
        self.name = name
        self.Song=Song
    def length(self):

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
80992,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, album, songs = []):
        self.album = album
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return (total)
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
81454,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
81456,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
81458,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
81617,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, namme, list_songs):
        self.namme = namme
        self.list_songs = list_songs

    def length(self):
        total = 0
        for song in self.list_songs:
            total += song.length
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())





"
82215,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __innit__(self, name, lst):
        self.name = name
        self.lst= lst
    def length(self):
        total = 0
        for name in self.lst:
            total += self.name.length
        return total
         
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
82216,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __innit__(self, name, lst):
        self.name = name
        self.lst= lst
    def length(self):
        total = 0
        for name in self.lst:
            total += self.length
        return total
         
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
82217,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __innit__(self, name, lst):
        self.name = name
        self.lst= lst
    def length(self):
        total = 0
        for name in self.lst:
            total += name.length
        return total
         
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
82218,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst= lst
    def length(self):
        total = 0
        for name in self.lst:
            total += name.length
        return total
         
    

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
83660,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, list):
        self.list = list
        self.name = name
        
    def length(self, list):
        sum = 0
        for song in self.list:
            sum += song.length
        return sum
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
83661,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, list):
        self.list = list
        self.name = name
        
    def length(self):
        sum = 0
        for song in self.list:
            sum += song.length
        return sum
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
83694,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
84369,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
84474,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total



"
84475,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
84905,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = songs
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85536,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85539,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

    def length(self):
        total = 0
        for i in self.lst:
            total += len(self.length)
        return total 
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85540,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

    def length(self):
        total = 0
        for i in self.lst:
            total += i.length
        return total 
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85541,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

    def length(self):
        total = 0
        for i in self.lst:
            total += 1
        return total 
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85544,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

    def length(self):
        total = 0
        for i in self.lst:
            total += self.length
        return total 
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85545,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, lst):
        self.name = name
        self.lst = lst

    def length(self):
        total = 0
        for i in self.lst:
            total += int(self.length)
        return total 
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
85718,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song_list):
        self.name = name
        self.song_list = song_list
        
    def length(self):
        total = 0
        for s in self.song_list:
            total += s.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
86755,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
        
    def length(self):
        total = 0
        for song in self.songs: 
            total += song.length
        return total
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87379,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87380,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    
    def __init__(self, name, song):
        self.name = name
        self.song = song
    
    def length(self):
        total = 0
        for song in self.song:
            total += song.length
        return total
        
        

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87393,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87948,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.lenght
        return total
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87949,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in songs:
            total += song.lenght
    return total
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87952,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87953,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
            
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87954,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in songs:
            total += song.lenght
        return total
            
    
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
87958,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
88637,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs=songs
    def length(self):
        total=0
        for song in self.songs:
            total+=song.length

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
88639,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self,name,songs):
        self.name=name
        self.songs= songs
    def length(self):
        total=0
        for song in self.songs:
            total+=song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
89270,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total
  

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
89890,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songs):
        self.name = name
        self.Songs = Songs
    def length(self):
        total_length = 0
        for song in self.Songs:
            total_length += song.length
        return total_length
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
89902,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, Songs):
        self.name = name
        self.Songs = Songs
    def length(self):
        
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
91333,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    
    def length(self):
        total = 0
        for song in self.songs:
            total += song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
91444,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        su = 0
        for (s,l) in self.songlist:
            su += l
        return su

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
91445,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        s = sum(self.songlist)
        return s

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
91450,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songlist):
        self.name = name
        self.songlist = songlist
        
    def length(self):
        su = 0
        print(self.songlist)
        return su

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
92593,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, n, l):
        self.n = n
        self.l = l
        
    def length(self):
        tot = 0
        for song in self.l:
             tot = song.length + tot
                
        return tot

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
92601,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, n, l):
        self.n = n
        self.l = l
        
    def length(self):
        tot = 0
        for song in l:
             tot = song.length + tot

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
92602,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, n, l):
        self.n = n
        self.l = l
        
    def length(self):
        tot = 0
        for song in l:
             tot = song.length + tot
                
        return tot

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
92614,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, songs):
        self.name = name
        self.songs = songs
    def length(self):
        sum = 0
        for item in self.songs:
            sum += item.length
        return sum
s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
92639,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
95488,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name = name
        self.song = song
    def length(self):
        total = 0
        for i in self.song:
            total += i.song.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
95489,mult_class_track_and_album_len_ac,"class Song:

    def __init__(self, name, length):
        self.name = name
        self.length = length

    def __str__(self):
        return f""{self.name}: {self.length}""

class Album:
    def __init__(self, name, song):
        self.name = name
        self.song = song
    def length(self):
        total = 0
        for i in self.song:
            total += i.length
        return total

s1 = Song(""Something"", 120)
s2 = Song(""Here Comes the Sun"", 122)
a1 = Album(""Abbey Road"", [s1, s2])
print(a1.length())

"
