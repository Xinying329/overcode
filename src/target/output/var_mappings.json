[
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_70400s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_70400s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64584s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64584s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80005s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80005s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66092s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66092s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_37520s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_37520s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58214s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58214s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "string=\"name: \"+___+\", age:\"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84865s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "string=\"name: \"+name+\", age:\"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84865s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84881s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84881s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_23726s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_23726s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84625s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84625s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91985s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91985s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4728s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4728s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31286s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31286s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_6052s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_6052s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8388s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8388s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48471s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48471s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57464s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57464s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64065s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64065s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90365s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90365s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73589s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73589s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_16610s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_16610s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 7.17492568250068, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=(\"name: \",self.name,\"age: \",self.age)", 
            "new_str=\"\"", 
            "return new_str"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48478s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48478s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48478s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25740s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25740s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4721s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4721s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___+\" age: \"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4731s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\" age: \"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4731s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_18501s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_18501s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82792s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82792s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64064s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64064s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57465s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57465s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_83636s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_83636s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_59706s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_59706s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49342s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49342s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_56689s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_56689s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "return \"name: \"+___+\", age: \"+str(age)", 
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49046s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49046s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71274s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71274s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93584s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93584s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80587s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80587s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_44922s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_44922s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_81432s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_81432s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78064s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78064s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66682s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66682s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "c.age=str(age)", 
            "def __init__(c,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34463s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(c,name,___):", 
            "c.name=name"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34463s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82793s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82793s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_18500s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_18500s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49888s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49888s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "return \"name: \"+___+\", age: \"+str(age)", 
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31141s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31141s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25741s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25741s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4716s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4716s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64585s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64585s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82159s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82159s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66093s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66093s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_95899s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_95899s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68392s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,name,___):", 
            "self.name=str(name)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68392s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84874s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84874s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84864s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84864s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "match_type": "no_match", 
        "original": [
            "string=\"name: \"+self.name+\", age:\"+str(self.age)", 
            "return string"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84864s"
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87356s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87356s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58215s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58215s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88614s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88614s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31346s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31346s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "match_type": "no_match", 
        "original": [
            "make_sound=\"Meow\"", 
            "return make_sound"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84880s"
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84880s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84880s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4739s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4739s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82166s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82166s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89852s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89852s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_16618s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_16618s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73591s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73591s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96227s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96227s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57453s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57453s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_51869s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_51869s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34622s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34622s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90366s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90366s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_32582s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_32582s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88620s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88620s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38249s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38249s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57467s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57467s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64066s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64066s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62583s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62583s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25743s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25743s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4722s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4722s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name\"+\" \"+___+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31143s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name\"+\" \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31143s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66680s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66680s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78076s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78076s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73178s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73178s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_75319s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_75319s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84866s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84866s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84876s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84876s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68390s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,name,___):", 
            "self.name=str(name)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68390s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47224s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47224s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_72585s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_72585s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58207s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58207s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64587s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64587s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69014s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69014s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69004s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69004s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "match_type": "no_match", 
        "original": [
            "def __init__(self,___,___,make_sound):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4714s"
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4714s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4714s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80006s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80006s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71880s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71880s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_70403s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_70403s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89778s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89778s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_41351s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_41351s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_50532s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_50532s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+self.name+\", age:\"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38250s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38250s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 11.262388523751019, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=\"name: \"", 
            "new_str+=self.name", 
            "new_str=\"\"", 
            "return new_str"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48472s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48472s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48472s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "return \"name: \"+___+\", age: \"+str(age)", 
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31138s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31138s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71874s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71874s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_77408s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_77408s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91986s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91986s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84882s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84882s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58206s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58206s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_72584s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_72584s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_85525s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_85525s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+self.name+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_63091s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_63091s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84877s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84877s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84867s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84867s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47225s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47225s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68391s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,name,___):", 
            "self.name=str(name)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68391s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89779s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89779s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38251s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38251s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+self.name+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_2047s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_2047s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_79529s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_79529s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_74797s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_74797s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_33141s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_33141s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64586s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64586s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_46223s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_46223s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "return \"name: \"+___+\", age: \"+str(age)", 
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_86708s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_86708s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "c.age=str(age)", 
            "def __init__(c,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34469s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(c,name,___):", 
            "c.name=name"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34469s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66688s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66688s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96224s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96224s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82165s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82165s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31345s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31345s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80594s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80594s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_20468s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_20468s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_51868s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_51868s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_33148s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_33148s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64067s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_64067s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57466s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57466s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68388s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,name,___):", 
            "self.name=str(name)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_68388s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name\"+\" \"+___+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31142s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name\"+\" \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_31142s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25107s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25107s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8465s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8465s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_75318s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_75318s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57459s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57459s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89784s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89784s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78077s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78077s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___+\" age: \"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43503s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\" age: \"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43503s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8402s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8402s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=int(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8396s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8396s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80581s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80581s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93592s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93592s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89775s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89775s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90372s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90372s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4719s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4719s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62587s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62587s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47229s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47229s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_28735s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_28735s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+self.name+\" age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71860s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71860s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "cat.age=age", 
            "def __init__(cat,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62082s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(cat,name,___):", 
            "cat.name=name"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62082s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_37518s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_37518s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48476s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48476s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43496s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43496s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "return \"name: \"+___+\", age: \"+str(age)", 
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35149s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35149s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___+\" age: \"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58213s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\" age: \"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58213s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47230s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_47230s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+str(self.name)+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_67632s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_67632s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19775s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19775s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84872s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84872s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "result=\"name: \"+self.name+\", age: \"+str(self.age)", 
                "return result"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "result=\"name: \"+self.name+\", age: \"+str(self.age)", 
            "return result"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84872s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "info_content": 11.262388523751019, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=\"age:\"", 
            "new_str+=self.name", 
            "new_str+=\"name:\"", 
            "new_str=\"\"", 
            "return new_str", 
            "new_str+=str(self.age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48482s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48482s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48482s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "cat.age=age", 
            "def __init__(cat,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62076s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(cat,name,___):", 
            "cat.name=name"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_62076s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_60182s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_60182s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4710s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4710s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_51864s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_51864s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_37519s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_37519s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 19.4373142062517, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=self.name", 
            "new_str+=\"age: \"", 
            "new_str=\"\"", 
            "return new_str", 
            "new_str+=\"name: \"", 
            "new_str+=str(self.age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48467s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48467s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48467s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_21812s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_21812s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73174s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_73174s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49886s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49886s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69703s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69703s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84873s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84873s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "match_type": "no_match", 
        "original": [
            "result=\"name: \"+self.name+\", age:\"+str(self.age)", 
            "return result"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84873s"
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78055s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78055s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80003s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80003s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_79997s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_79997s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 19.4373142062517, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=self.name+\" \"", 
            "new_str+=\"age: \"", 
            "new_str=\"\"", 
            "return new_str", 
            "new_str+=\"name: \"", 
            "new_str+=str(self.age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48483s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48483s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48483s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93930s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93930s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43502s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43502s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19213s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19213s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_32032s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_32032s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4727s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4727s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name:\"+___+\",\"+\"age:\"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89780s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name:\"+name+\",\"+\"age:\"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89780s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8397s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8397s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66685s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66685s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "c.age=age", 
            "def __init__(c,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34464s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(c,name,___):", 
            "c.name=name"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34464s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_95897s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_95897s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66671s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66671s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71273s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_match_perfectly", 
        "original": [
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71273s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80580s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80580s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_54574s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_54574s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_55985s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_55985s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_39452s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_39452s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57462s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57462s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___+\", \"+\"age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84354s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", \"+\"age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84354s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49345s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_49345s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89863s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89863s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88611s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88611s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 19.4373142062517, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=self.name", 
            "new_str+=\"age: \"", 
            "new_str=\"\"", 
            "return new_str", 
            "new_str+=\"name: \"", 
            "new_str+=str(self.age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48475s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48475s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48475s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71873s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71873s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89857s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89857s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_17061s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_17061s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78078s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_78078s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19759s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19759s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57456s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_57456s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___+\", \"+\"age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35799s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 8.17492568250068, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", \"+\"age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35799s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_56695s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_56695s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90368s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_90368s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "match_type": "no_match", 
        "original": [
            "def __init__(self,___,___,make_sound):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4713s"
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4713s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "info_content": 4.08746284125034, 
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4713s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69013s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_69013s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_74791s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_74791s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+self.name+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_53172s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_53172s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 19.4373142062517, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=self.name", 
            "new_str+=\"age: \"", 
            "new_str=\"\"", 
            "return new_str", 
            "new_str+=\"name: \"", 
            "new_str+=str(self.age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48481s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48481s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48481s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "match_type": "no_match", 
        "original": [
            "self.make_sound=make_sound", 
            "make_sound=\"Meow\"", 
            "return make_sound"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84871s"
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84871s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84871s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58210s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_58210s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return ___+\", \"+\"age: \"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87353s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return name+\", \"+\"age: \"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87353s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66687s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_66687s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87365s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87365s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "c.age=str(age)", 
            "def __init__(c,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34466s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(c,name,___):", 
            "c.name=name"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34466s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=int(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8395s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8395s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80600s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80600s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89782s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89782s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87933s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_87933s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_21809s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_21809s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8401s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8401s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43510s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43510s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___.self+\" age: \"+age.self"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43500s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name.self+\" age: \"+___.self"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43500s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82786s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_82786s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4725s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4725s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4735s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4735s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25111s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25111s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91988s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91988s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84878s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84878s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84356s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84356s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "return \"name: \"+___+\", age: \"+str(age)", 
            "self.age=age", 
            "def __init__(self,___,age):", 
            "def __str__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35153s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "def __str__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+str(___)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35153s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return 'name: '+str(___)+', age: '+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34625s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return 'name: '+str(name)+', age: '+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_34625s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_32585s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_32585s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71261s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71261s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71271s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71271s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+self.name+\", age: \"+str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80592s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80592s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_33696s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_33696s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_77407s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_77407s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=int(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8400s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8400s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8394s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_8394s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_16615s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_16615s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89783s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89783s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_76937s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_76937s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91989s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91989s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4734s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4734s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43501s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43501s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_18498s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_18498s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89860s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89860s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96215s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96215s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84869s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84869s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84879s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84879s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_55986s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_55986s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_75320s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_75320s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_54577s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_54577s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89777s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89777s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35800s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_35800s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_52518s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_52518s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71270s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_71270s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93590s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93590s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_83640s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_83640s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_74799s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_74799s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_29957s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_29957s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):", 
            "return \"name: \"+___+\", age: \"+age"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25109s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):", 
            "return \"name: \"+name+\", age: \"+___"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_25109s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_23733s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_23733s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19219s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_19219s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88610s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_88610s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_95901s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_95901s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96223s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_96223s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "info_content": 15.34985136500136, 
        "maps_to": [
            [
                "new_str+=self.name+\", \"", 
                "new_str+=\"age: \"", 
                "new_str=\"\"", 
                "return new_str", 
                "new_str+=\"name: \"", 
                "new_str+=str(self.age)"
            ]
        ], 
        "match_type": "templates_differ", 
        "original": [
            "new_str+=self.age", 
            "new_str+=self.name", 
            "new_str+=\"age: \"", 
            "new_str=\"\"", 
            "return new_str", 
            "new_str+=\"name: \""
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48474s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "", 
                "name: ", 
                "name: Fluffy, ", 
                "name: Fluffy, age: ", 
                "name: Fluffy, age: 3"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "", 
                "name: ", 
                "name: Spike, ", 
                "name: Spike, age: ", 
                "name: Spike, age: 2"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48474s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_48474s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_6047s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_6047s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38246s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_38246s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93589s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_93589s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80000s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_80000s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4712s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_4712s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "def __init__(self,___,age):", 
            "self.age=str(age)"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_72583s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_72583s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89869s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_89869s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91322s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_91322s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43494s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_43494s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "cat.age=age", 
                "self.age=age", 
                "def __init__(self,___,age):", 
                "self.age=str(age)", 
                "def __init__(cat,___,age):"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.age=age", 
            "def __init__(self,___,age):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84870s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                3
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                3
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                3, 
                2
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                3, 
                2
            ]
        }
    }, 
    {
        "maps_to": [
            [
                "self.name=name", 
                "def __init__(self,name,___):", 
                "def __init__(cat,name,___):", 
                "cat.name=name"
            ]
        ], 
        "match_type": "values_match", 
        "original": [
            "self.name=name", 
            "def __init__(self,name,___):"
        ], 
        "solution": "Classes_Basic_Cat_acstudent_84870s", 
        "values_of_match": {
            "print(Cat(\"Fluffy\", 3).__str__(), \"name: Fluffy, age: 3\", \"testing __str__ on Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Fluffy\", 3).make_sound(), \"Meow\", \"testing make_sound with Fluffy\")": [
                "Fluffy"
            ], 
            "print(Cat(\"Spike\", 2).__str__(), \"name: Spike, age: 2\", \"testing __str__ on Spike\")": [
                "Fluffy", 
                "Spike"
            ], 
            "print(Cat(\"Spike\", 2).make_sound(), \"Meow\", \"testing make_sound with Spike\")": [
                "Fluffy", 
                "Spike"
            ]
        }
    }
]